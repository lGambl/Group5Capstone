@model IEnumerable<StudyWeb.Models.Source>

@{
    ViewData["Title"] = "Index";
}

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</head>



<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Add Source</h5>
            </div>
            <div class="modal-body">
                
            </div>
        </div>
    </div>
</div>


<div class="form-group">
    <label for="tagInput">Enter Tag:</label>
    <input type="text" class="form-control" id="tagInput" placeholder="Enter a tag">
    <button type="button" class="btn btn-primary mt-2" id="addTagButton">Add Tag</button>
</div>

<div class="form-group">
    <label>Selected Tags:</label>
    <div id="selectedTags" class="border p-2"></div>
</div>

<button type="button" class="btn btn-primary" id="btnShowModal">Add Source</button>

<table id="sourceTable" class="table">
    <thead>
    <tr>
        <th>
            Title
        </th>
        <th>
            Actions
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a asp-action="View" asp-route-id="@item.Id">View</a>
                <a href="@Url.Action("Delete", new { id = item.Id })" class="delete-action"> Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<script>

    function updateHistoryAfterTagChange() {
        const url = new URL(window.location);
        url.searchParams.set('tags', selectedTags.join(','));
        window.history.replaceState({ path: url.toString() }, '', url.toString());
    }

    $('.delete-action').on('click', function (e) {
        e.preventDefault();
        var deleteUrl = $(this).attr('href');

        if (confirm('Are you sure you want to delete this source?')) {
            $.ajax({
                url: deleteUrl,
                type: 'DELETE',
                success: function (result) {
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Error deleting item.');
                }
            });
        }
    });

    $("#btnShowModal").click(function () {
        $(".modal-body").load("/SourceExplorer/Create", function () {
            $('#myModal').modal('show');
            initFormAndInputs();
        });
    });

    var selectedTags = [];

    $('#addTagButton').click(function () {
        var tag = $('#tagInput').val().trim();
        var validTag = tag.replace(/[^a-zA-Z0-9]/g, '');
        if (tag !== '' && validTag !== '' && !selectedTags.includes(validTag)) {
            selectedTags.push(validTag);
            updateSelectedTags();
            $('#tagInput').val('');
            triggerSearch();
            udpateHistoryAfterTagChange();
        } else if (validTag === '') {
            alert('Tags can only contain alphanumeric characters.');
        } else {
            alert('Tag could not be added to search. Ensure that the tag name is not empty and that it is not already in the search.');
        }
    });

    $(document).on('click', '.remove-tag', function () {
        var tagToRemove = $(this).data('tag');
        selectedTags = selectedTags.filter(tag => tag !== tagToRemove);
        updateSelectedTags();
        triggerSearch(); // Trigger the search
        updateHistoryAfterTagChange();
    });

    function triggerSearch() {
        if (selectedTags.length === 0) {
            updateTableWithAllSources();
        } else {
            updateTableWithSourcesGivenTags();
        }
    }

    function updateTableWithSourcesGivenTags() {
        let fixedTags = [];

        selectedTags.forEach(function (tag) {
            fixedTags.push("<" + tag + ">");
        });
        $.ajax({
            url: '@Url.Action("SearchTags", "SourceExplorer")', 
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(fixedTags),
            success: function (sources) {
                clearTable();
                updateTable(sources);
            },
            error: function () {
                clearTable();
            }
        });
    }

    function updateTableWithAllSources() {
        $.ajax({
            url: '@Url.Action("Index", "SourceExplorer")', 
            headers: {
                'Accept': 'application/json'
            },
            type: 'GET',
            success: function (sources) {
                clearTable();
                updateTable(sources);
            },
            error: function () {
                alert('Error fetching all sources.');
            }
        });
    }

    function updateSelectedTags() {
        $('#selectedTags').empty();
        selectedTags.forEach(function (tag) {
            $('#selectedTags').append(
                '<span class="badge badge-secondary mr-2">' + tag +
                ' <a href="#" class="remove-tag" data-tag="' + tag + '">&times;</a></span>'
            );
        });
    }

    function updateTable(sources) {
        sources.forEach(function (source) {
            $('#sourceTable tbody').append(
                '<tr>' +
                '<td>' + source.title + '</td>' +
                '<td>' +
                '<a href="/SourceExplorer/View/' + source.id + '">View</a> | ' +
                '<a href="#" class="delete-action" data-id="' + source.id + '">Delete</a>' +
                '</td>' +
                '</tr>'
            );
        });
    }

    function clearTable() {
        $('#sourceTable tbody').empty();
    }
    
        function initFormAndInputs() {
            
            var typeSelect = document.getElementById('Type');
            var linkInput = document.getElementById('linkInput');
            var fileInput = document.getElementById('pdfInput');
            var videoInput = document.getElementById('videoInput');
            var imageInput = document.getElementById('imageInput');

            typeSelect.addEventListener('change', function () {
                var selectedType = typeSelect.value;
                switch (selectedType) {
                    case "2":
                    case "4":
                    case "6":
                        videoInput.style.display = 'none';
                        linkInput.style.display = 'block';
                        fileInput.style.display = 'none';
                        imageInput.style.display = 'none';
                        break;
                    case "3":
                        videoInput.style.display = 'none';
                        fileInput.style.display = 'block';
                        linkInput.style.display = 'none';
                        imageInput.style.display = 'none';
                        break;
                    case "1":
                        videoInput.style.display = 'block';
                        fileInput.style.display = 'none';
                        linkInput.style.display = 'none';
                        imageInput.style.display = 'none';
                        break;
                    case "5":
                        videoInput.style.display = 'none';
                        fileInput.style.display = 'none';
                        linkInput.style.display = 'none';
                        imageInput.style.display = 'block';
                        break;
                    default:
                        // Handle default case if necessary
                        break;
                }

            });

            typeSelect.dispatchEvent(new Event('change'));

            $('form').submit(function (e) {
                e.preventDefault(); 
                var formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'), 
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false, 
                    success: function (response) {
                        alert('Source added successfully.');
                        $('#myModal').modal('hide');
                        window.location.reload();
                    },
                    error: function (response) {
                        alert(response.responseJSON.message);
                    }
                });
            });
        }

    function checkFileType(input) {
        if (input.files && input.files[0]) {
            var file = input.files[0];
            if (file.type !== 'application/pdf') {
                alert('Only PDF files are allowed. Please select a PDF file.');
                input.value = ''; 
            }
        }
    }
</script>
